alter table engineered_gene add (mod_type_unctrl_vocab varchar2(255));
alter table env_factor add (name_unctrl_vocab varchar2(255));
alter table env_factor add (type_unctrl_vocab varchar2(255));
alter table image add (STAINING_UNCTRL_VOCAB varchar2(255));
alter table treatment add (admin_route_unctrl_vocab varchar2(255));


update therapy set therapeutic_experiment = 0  where therapeutic_experiment is null;
update env_factor set is_cmap_agent=0 where is_cmap_agent is null;
update publication set first_time_reported = 0 where first_time_reported is null;

select abs_cancer_model_type, count(*) from abs_cancer_model
 group by abs_cancer_model_type;
 
select distinct acm.abs_cancer_model_id, acm.abs_cancer_model_type
 from abs_cancer_model acm, (
select abs_cancer_model_id, abs_cancer_model_type, par_abs_can_model_id
 from abs_cancer_model
 where par_abs_can_model_id is not null
 connect by prior par_abs_can_model_id = abs_cancer_model_id
) t
 where acm.abs_cancer_model_id = t.par_abs_can_model_id

select acm.abs_cancer_model_type,
       acm.taxon_id,
       sr.stage stage,
       t.dosage,
       sr.aveinh aveinh,
       sr.diffinh diffinh
  from screening_Result sr,
       env_factor a,
       YST_MDL_SCRNING_RESULT ymsr,
       abs_cancer_model acm,
       treatment t
 where sr.agent_id = a.env_factor_id
   and sr.screening_result_id = ymsr.screening_result_id
   and sr.treatment_id = t.treatment_id
   and ymsr.abs_cancer_model_id = acm.abs_cancer_model_id
   and a.nsc_number in (337250, 122758)

select distinct a.nsc_number
  from screening_Result sr,
       env_factor a,
       YST_MDL_SCRNING_RESULT ymsr,
       abs_cancer_model acm
 where sr.agent_id = a.env_factor_id
   and sr.screening_result_id = ymsr.screening_result_id
   and ymsr.abs_cancer_model_id = acm.abs_cancer_model_id
   --and a.nsc_number = 704805




select acm.abs_cancer_model_id, 
       acm.abs_cancer_model_type,
       ef.env_factor_id,
       ef.nsc_number
  from abs_cancer_model acm,
       animal_model_therapy amt,
       therapy t,
       env_factor ef
 where acm.abs_cancer_model_id = amt.abs_cancer_model_id
   and amt.therapy_id = t.therapy_id
   and t.env_factor_id = ef.env_factor_id
   and ef.nsc_number in (
select distinct a.nsc_number
  from screening_Result sr,
       env_factor a
 where sr.agent_id = a.env_factor_id )
 
 
select tx.ethnicity_strain,
       sr.stage stage,
       t.dosage,
       sr.aveinh aveinh,
       sr.diffinh diffinh,
       a.env_factor_id
  from screening_Result sr,
       env_factor a,
       YST_MDL_SCRNING_RESULT ymsr,
       abs_cancer_model acm,
       treatment t,
       taxon tx
 where sr.agent_id = a.env_factor_id
   and sr.screening_result_id = ymsr.screening_result_id
   and sr.treatment_id = t.treatment_id
   and ymsr.abs_cancer_model_id = acm.abs_cancer_model_id
   and acm.taxon_id = tx.taxon_id
   and a.nsc_number = 122758--in (337250, 122758)
   
   
select tx.ethnicity_strain,
       t.dosage,
       sr.aveinh aveinh,
       sr.diffinh diffinh
  from screening_Result sr,
       env_factor a,
       YST_MDL_SCRNING_RESULT ymsr,
       abs_cancer_model acm,
       treatment t,
       taxon tx
 where sr.agent_id = a.env_factor_id
   and sr.screening_result_id = ymsr.screening_result_id
   and sr.treatment_id = t.treatment_id
   and ymsr.abs_cancer_model_id = acm.abs_cancer_model_id
   and acm.taxon_id = tx.taxon_id
   and a.nsc_number = 122758--in (337250, 122758)
   
   
select tx.ethnicity_strain,
       t.dosage,
       sr.aveinh aveinh,
       sr.diffinh diffinh,
       a.env_factor_id,
       ymsr.abs_cancer_model_id
  from screening_Result sr,
       env_factor a,
       YST_MDL_SCRNING_RESULT ymsr,
       abs_cancer_model acm,
       treatment t,
       taxon tx
 where sr.agent_id = a.env_factor_id
   and sr.screening_result_id = ymsr.screening_result_id
   and sr.treatment_id = t.treatment_id
   and ymsr.abs_cancer_model_id = acm.abs_cancer_model_id
   and acm.taxon_id = tx.taxon_id
   and a.nsc_number = 122758
   and sr.stage = '0'
 order by 1, 2
 
 
select acm.abs_cancer_model_id, 
       acm.abs_cancer_model_type,
       ef.env_factor_id,
       ef.nsc_number
  from abs_cancer_model acm,
       animal_model_therapy amt,
       therapy t,
       env_factor ef
 where acm.abs_cancer_model_id = amt.abs_cancer_model_id
   and amt.therapy_id = t.therapy_id
   and t.env_factor_id = ef.env_factor_id
   and ef.nsc_number in (
select distinct a.nsc_number
  from invivo_Result sr,
       env_factor a
 where sr.agent_id = a.env_factor_id )
 
 
select acm.abs_cancer_model_id,
       acm.model_descriptor,
       tx.ethnicity_strain,
       count(*)
  from invivo_Result sr,
       env_factor a,
       XENOGRAFT_INVIVO_RESULT ymsr,
       abs_cancer_model acm,
       treatment t,
       taxon tx
 where sr.agent_id = a.env_factor_id
   and sr.invivo_result_id = ymsr.invivo_result_id
   and sr.treatment_id = t.treatment_id
   and ymsr.abs_cancer_model_id = acm.abs_cancer_model_id
   and acm.taxon_id = tx.taxon_id
   and a.nsc_number = 122758--in (337250, 122758)
 group by acm.abs_cancer_model_id, acm.model_descriptor, tx.ethnicity_strain
 order by 3, 2

 
 
select invivoresu0_.abs_cancer_model_id as abs1___, 
       invivoresu0_.invivo_result_id as invivo2___, invivoresu1_.invivo_result_id as invivo1_0_, 
       invivoresu1_.evaluationDay as evaluati2_25_0_, 
       invivoresu1_.toxicitySurvivors as toxicity3_25_0_, 
       invivoresu1_.toxicityEvalDay as toxicity4_25_0_, 
       invivoresu1_.percent_treated_control as percent5_25_0_, 
       invivoresu1_.endpoint_code_id as endpoint6_25_0_, invivoresu1_.treatment_id as treatment7_25_0_,
       invivoresu1_.agent_id as agent8_25_0_ 
  from xenograft_invivo_result invivoresu0_ 
     inner join invivo_result invivoresu1_ on 
     invivoresu0_.invivo_result_id=invivoresu1_.invivo_result_id 
  where invivoresu0_.abs_cancer_model_id=718

select count(*)
  from xenograft_invivo_result invivoresu0_ 
     inner join invivo_result invivoresu1_ on 
     invivoresu0_.invivo_result_id=invivoresu1_.invivo_result_id 
  where invivoresu0_.abs_cancer_model_id=718
  
select xenograftc0_.par_abs_can_model_id as par28___, 
	xenograftc0_.abs_cancer_model_id as abs1___, 
	xenograftc0_.abs_cancer_model_id as abs1_0_, 
	xenograftc0_.experiment_design as experiment3_2_0_, 
	xenograftc0_.model_descriptor as model4_2_0_, 
	xenograftc0_.state as state2_0_, 
	xenograftc0_.availability_id as availabi6_2_0_, 
	xenograftc0_.taxon_id as taxon7_2_0_, 
	xenograftc0_.submitter_id as submitter8_2_0_, 
	xenograftc0_.principal_investigator_id as principal9_2_0_, 
	xenograftc0_.administrative_site as adminis10_2_0_, 
	xenograftc0_.genetic_manipulation as genetic11_2_0_, 
	xenograftc0_.modification_description as modific12_2_0_, 
	xenograftc0_.parental_cell_line_name as parental13_2_0_, 
	xenograftc0_.name as name2_0_, xenograftc0_.atcc_number as atcc15_2_0_, 
	xenograftc0_.cell_amount as cell16_2_0_, xenograftc0_.harvest_date as harvest17_2_0_, 
	xenograftc0_.graft_type as graft18_2_0_, xenograftc0_.graft_type_unctrl_vocab as graft19_2_0_, 
	xenograftc0_.tumor_code_id as tumor20_2_0_, xenograftc0_.origin_species_id as origin21_2_0_, 
	xenograftc0_.host_species_id as host22_2_0_, xenograftc0_.organ_id as organ23_2_0_ 
 from abs_cancer_model xenograftc0_ where xenograftc0_.par_abs_can_model_id=1036 --?
 


/* engineered gene, tms etc. */
 select engineered_gene_type, count(*) from engineered_gene
  group by engineered_gene_type
  
ENGINEERED   COUNT(*)
---------- ----------
GS                  3
IM                 62
T                 440
TM                339


select abs_cancer_model_id, eg.engineered_gene_type
  from ani_mod_engineered_gene ameg, 
       engineered_gene eg
 where ameg.engineered_gene_id = eg.engineered_Gene_id
   and eg.engineered_gene_type in ('GS', 'IM')
   
select modeluid from abs_cancer_model_tmp where abs_cancer_model_id in (
select abs_cancer_model_id
  from ani_mod_engineered_gene ameg, 
       engineered_gene eg
 where ameg.engineered_gene_id = eg.engineered_Gene_id
   and eg.engineered_gene_type in ('GS', 'IM')
)


select distinct abs_cancer_model_id 
  from ANIMAL_MODEL_THERAPY amt,
       therapy t
 where t.therapeutic_experiment = 0
   and t.therapy_id = amt.therapy_id

select type, count(*)
  from env_factor e,
       therapy t
 where e.env_factor_id = t.env_factor_id
   and t.therapeutic_experiment = 0
 group by rollup(type)   

 
select agent0_.env_factor_id as env1_0_, agent0_.env_factor_type, agent0_.type as type50_0_
  from env_factor agent0_ 
 where agent0_.env_factor_id in (
 select distinct t.env_Factor_id
  from ANIMAL_MODEL_THERAPY amt,
       therapy t
 where t.therapeutic_experiment = 0
   and t.therapy_id = amt.therapy_id )
--   and agent0_.env_factor_type='AG'


select t.therapy_id, e.env_factor_id, e.env_factor_type, e.type
  from env_factor e,
       therapy t,
       animal_model_therapy amt
 where amt.therapy_id = t.therapy_id
   and t.env_Factor_id = e.env_factor_id
   and t.therapeutic_experiment = 0
   and amt.abs_cancer_model_id = 190



select ca.AGENTCATEGORY,
       ca.AGENTNAME,
       c.CARCINOGENUID,
       c.MODELKEY,
       c.CARCINOGENAGENTKEY,
       c.SEX,
       c.AGE,
       c.CARCINOGENAGENTADMINKEY,
       c.DOSE,
       c.TREATMENTLENGTH
  from CARCINOGEN c,CARCINOGENAGENT ca
 where c.MODELKEY = 1782
   and c.CARCINOGENAGENTKEY = ca.CARCINOGENAGENTUID
 order by c.CARCINOGENUID


select therapy_id, therapyuid, carcinogenuid, carcinogenagentkey
  from therapy_tmp
 where carcinogenuid in (1552, 1553, 1554, 1555, 1556)

select name, env_factor_type, type
   from env_factor_tmp
  where carcinogenagentuid in (  59, 59, 23, 148, 163)


select acm.abs_cancer_model_id,
       t.therapy_id
  from abs_cancer_model_tmp acm,
       therapy_tmp t,
       therapy@camodop_datop tc
 where acm.modeluid = tc.modelkey
   and t.therapyuid = tc.therapyuid
order by 1

select acm.abs_cancer_model_id,
       t.therapy_id
  from abs_cancer_model_tmp acm,
       therapy_tmp t,
       carcin@camodop_datop tc
 where acm.modeluid = tc.modelkey
   and t.therapyuid = tc.therapyuid

select publication_id, year, authors
  from publication
 where publication_id in (
	select min(publication_id) publication_id
	  from publication
	 where pmid in (
		select distinct pmid
		  from animal_model_therapy amt,
		       therapy_publication tp,
		       publication p
		 where amt.abs_cancer_model_id = 3
		   and amt.therapy_id = tp.therapy_id
		   and tp.publication_id = p.publication_id
		union
		select distinct pmid
		  from ani_mod_cell_line acl,
		       cell_line_publication cp,
		       publication p
		 where acl.abs_cancer_model_id = 3
		   and acl.cell_line_id = cp.cell_line_id
		   and cp.publication_id = p.publication_id
		union
		select distinct pmid
		  from abs_can_mod_publication acmp,
		       publication p
		 where acmp.abs_cancer_model_id = 3
		   and acmp.publication_id = p.publication_id )
	 group by pmid )
 order by year desc, authors

ALTER SEQUENCE hibernate_sequence
INCREMENT BY 1000000;

SELECT hibernate_sequence.NEXTVAL FROM dual;

ALTER SEQUENCE hibernate_sequence
INCREMENT BY 1;



http://caimage.nci.nih.gov/lizardtech//iserv/getthumb?cat=Model&img=277.sid
http://caimage.nci.nih.gov/lizardtech//iserv/catalogviewtumors.jsp?cat=Model&img=277.sid

alter table sex_distribution add constraint sex_distribution_type_unq unique(type);
alter table ANIMAL_DISTRIBUTOR add constraint ANIMAL_DISTRIBUTOR_name_unq unique(name);
alter table CHEMICAL_CLASS add constraint CHEMICAL_CLASS_name_unq unique(CHEMICAL_CLASS_NAME);
alter table BIOLOGICAL_PROCESS add constraint BIOLOGICAL_PROCESS_name_unq unique(PROCESS_NAME);
alter table AGENT_TARGET add constraint TARGET_name_unq unique(TARGET_NAME);
alter table EXP_LEVEL_DESC add constraint EXP_LEVEL_unq unique(EXPRESSION_LEVEL);
alter table publication_status add constraint publication_status_name_unq unique(name);
alter table REG_ELEMENT_TYPE add constraint REG_ELEMENT_TYPE_name_unq unique(name);
alter table modification_type add constraint modification_type_name_unq unique(name);
alter table party add constraint party_username_unq unique(username);
alter table model_section add constraint model_section_name_unq unique(name);



select id, name, NUMBEROFFEATURES,              -- features in arraydesign tbl, likely from header
     ( select count(*)                          -- count of persisted/parsed rows
 	     from ARRAYDESIGNFEATUREGRP adfg,
		 	  FEATURE f
	    where adfg.array_design_id = ad.id
		  and adfg.FEATURE_GROUP_ID = f.FEATURE_GROUP_ID ) n_feature,
     ( select count(*)                          -- count of persisted/parsed comp. sequences
 	     from ARRAYDESIGNCOMPOSITEGRP adcg,
		 	  COMPOSITESEQUENCE cs
	    where adcg.array_design_id = ad.id
		  and adcg.COMPOSITE_GROUP_ID = cs.COMPOSITE_GROUP_ID ) n_comp_sequence,
     ( select count(*)                          -- count of persisted/parsed reporters
 	     from ARRAYDESIGNREPORTERGRP adrg,
		 	  REPORTER r
	    where adrg.array_design_id = ad.id
		  and adrg.reporter_group_id = r.reporter_group_id ) n_reporter
  from arraydesign ad
 where ad.deleted != 1                          -- not marked for deletion
   and exists (
     select null
       from AS_protection_element pe,
            AS_PROTECTION_GROUP_ELEMENT pge
      where pe.PROTECTION_ELEMENT_ID = pge.PROTECTION_ELEMENT_ID
        and pge.PROTECTION_GROUP_ID = 0         -- belongs to the "public" group
        and instr(object_id, 'arraydesign') > 0
		and replace(object_id, 'caarray;arraydesign;', '') = ad.id
     )
order by 1

create index feature_group_id_idx on feature(feature_group_id);


create global temporary table temp_constraints
  as
  select a.table_name,
         a.constraint_name pkey_constraint,
         b.constraint_name fkey_constraint,
         b.r_constraint_name
    from user_constraints a, user_constraints b
   where 1=0
alter table temp_constraints modify fkey_constraint NULL;

truncate table temp_constraints;
insert into temp_constraints
 select table_name, constraint_name, null, null from user_constraints where 
 constraint_type = 'P';
insert into temp_constraints
  select a.table_name,
         a.constraint_name pkey_constraint,
             b.constraint_name fkey_constraint,
             b.r_constraint_name
    from user_constraints a, user_constraints b
   where a.table_name = b.table_name
     and a.constraint_type = 'P'
     and b.constraint_type = 'R';
     
insert into temp_constraints
    select a.table_name,
           a.constraint_name pkey_constraint,
           b.constraint_name fkey_constraint,
           b.r_constraint_name
      from user_constraints a, user_constraints b
     where a.table_name = b.table_name
       and a.constraint_type = 'P'
       and b.constraint_type = 'R'
       and a.constraint_name != b.r_constraint_name;

column table_name format a40
select rpad( '*', (level-1)*2, '*' ) || table_name table_name
from temp_constraints
start with fkey_constraint is null
connect by prior pkey_constraint = r_constraint_name


create global temporary table allpcr_h(
   entity varchar2(4000) unique,
   allpcr_h_id integer primary key)
on commit delete rows;



create sequence allpcr_h_seq;

CREATE TRIGGER allpcr_h_ID
BEFORE INSERT ON allpcr_h
FOR EACH ROW 
begin
  select allpcr_h_seq.nextval
    into   :new.allpcr_h_ID
    from dual;  
end;
/

create global temporary table allpcr(
   pid integer,
   cid integer,
   path varchar2(4000))
on commit delete rows;


create type numbertable is table of number;
/

create type longstringtable is table of varchar2(32767);
/


create or replace package hierarchical is
     function in_list_number(vinstring in varchar2) return numbertable;

     type CPType is record(
        parent varchar2(512),
        child varchar2(512));

     type CPRType is REF Cursor return CPType;
  
     function AllPaths(vcp in CPRType,
                       vonlylongest in integer default 1, -- if set to 0, all paths are returned
                       vseparator in varchar2 default ' -> ') 
       return longstringtable pipelined;
end hierarchical;
/

create or replace package body hierarchical is

function in_list_number(vinstring in varchar2) return numbertable is
l_string        long default vinstring || ',';
l_data          numbertable := numbertable();
n               number;
begin
   loop
      exit when l_string is null;
      n := instr( l_string, ',' );
      l_data.extend;
      l_data(l_data.count) := 
         ltrim( rtrim( substr( l_string, 1, n-1 ) ) );
      l_string := substr( l_string, n+1 );
   end loop;
   return l_data;
end in_list_number;


function AllPaths(vcp in CPRType,
                  vonlylongest in integer,
                  vseparator in varchar2) return longstringtable pipelined is
pragma autonomous_transaction;
cp CPType;
hnt numbertable;
i integer;
ret varchar2(32767);
begin
   loop
      fetch vcp into cp;
      exit when vcp%notfound;

      insert into allpcr_h(entity)
      (select cp.parent from dual
      union all select cp.child from dual)
      minus select entity from allpcr_h;
      
      insert into allpcr(pid, cid, path) 
      select hp.allpcr_h_id, hc.allpcr_h_id, hp.allpcr_h_id || ',' || hc.allpcr_h_id 
      from allpcr_h hp, allpcr_h hc
      where hp.entity = cp.parent
      and hc.entity = cp.child
      minus select pid, cid, path from allpcr;
   end loop;
         
   close vcp;

   loop
      insert into allpcr(pid, cid, path)
      select ap.pid, ac.cid, ap.pid || ',' || ac.path
      from allpcr ap, allpcr ac
      where ap.cid = ac.pid
      and (ap.pid, ac.cid) in
           (select ap.pid, ac.cid            
            from allpcr ap, allpcr ac
            where ap.cid = ac.pid
            minus
            select pid, cid
            from allpcr);
      exit when sql%rowcount = 0;
   end loop;   

      
   if vonlylongest != 0 then
      delete allpcr ad
      where exists
        (select 1
         from allpcr aa
         where aa.rowid != ad.rowid
         and (aa.path like '%,' || ad.path
           or aa.path like ad.path || ',%'));
   end if;


   for allpcr_rec in (select * from allpcr) loop
      hnt := in_list_number(allpcr_rec.path);
      ret := null;
      for i in 1 .. hnt.count loop
         if ret is null then
            select entity
            into ret
            from allpcr_h
            where allpcr_h_id = hnt(i);
         else
            select entity || vseparator || ret
            into ret
            from allpcr_h
            where allpcr_h_id = hnt(i);         
         end if;         
      end loop;
      pipe row(ret);
   end loop;
   
   rollback;
   
   return;
end AllPaths;
  
end hierarchical;
/



select * from table(hierarchical.allpaths(cursor(select a.table_name as parent,  
b.table_name as child from user_constraints a, user_constraints b where 
a.constraint_name = b.r_constraint_name and a.constraint_type = 'P' and 
b.constraint_type = 'R')))



delete from temp_constraints where table_name in ('BIOASSAYCREATION');
delete from temp_constraints where table_name in ('ARRAYMANUFACTUREDEVIATION');
delete from temp_constraints where table_name in ('FIDUCIAL');
delete from temp_constraints where table_name in ('ARRAYMANUFACTURE');
delete from temp_constraints where table_name in ('QUANTITATIONTYPE');
delete from temp_constraints where table_name in ('BIOASSAYCHANNEL');
delete from temp_constraints where table_name in ('CA_HYBRIDIZATIONFILEUPLOAD');
delete from temp_constraints where table_name in ('BIOASSAYMAPBIOASSAY');
delete from temp_constraints where table_name in ('IMAGE');
delete from temp_constraints where table_name in ('BIOASSAYTUPLE');
delete from temp_constraints where table_name in ('FEATUREEXTRACTION');
delete from temp_constraints where table_name in ('BIOSOURCECONTACT');
delete from temp_constraints where table_name in ('LABELEDEXTRACTCOMPOUND');
delete from temp_constraints where table_name in ('NAMEVALUETYPE');
delete from temp_constraints where table_name in ('TREATMENT');
delete from temp_constraints where table_name in ('BIOMATERIAL');
delete from temp_constraints where table_name in ('DATABASEENTRY');
delete from temp_constraints where table_name in ('SEQFEATURELOCATION');
delete from temp_constraints where table_name in ('IMMOBILIZEDCHARACTERISTICS');

delete from temp_constraints where table_name in ('DESIGNELEMENTGROUPTYPES');
delete from temp_constraints where table_name in ('CA_CHANNELTWOFACTORVALUES');
delete from temp_constraints where table_name in ('MISMATCHINFORMATION');
delete from temp_constraints where table_name in ('REPORTERDIMENSIONREPORTER');
delete from temp_constraints where table_name in ('EXPERIMENTALFACTOR');
delete from temp_constraints where table_name in ('HARDWAREAPPLICATION');
delete from temp_constraints where table_name in ('SOFTWARE');
delete from temp_constraints where table_name in ('FEATURECONTROLLEDFEATURE');
delete from temp_constraints where table_name in ('HARDWARE');
delete from temp_constraints where table_name in ('EXPERIMENTDESIGNTYPE');
delete from temp_constraints where table_name in ('FACTORVALUE');
delete from temp_constraints where table_name in ('FEATURECONTROLFEATURE');
delete from temp_constraints where table_name in ('NODEVALUE');
delete from temp_constraints where table_name in ('SEQUENCEPOSITION');
delete from temp_constraints where table_name in ('FEATUREINFORMATION');
delete from temp_constraints where table_name in ('FEATUREDEFECT');

select rpad( '*', (level-1)*2, '*' ) || table_name table_name
from temp_constraints
start with fkey_constraint is null
connect by prior pkey_constraint = r_constraint_name;

create index feature_fgrp_idx on feature(feature_group_id);
create index reporter_rgrp_idx on reporter(reporter_group_id);
create index dem_report_id_idx on designelementmap (reporter_id);
create index dem_com_seq_id_idx on designelementmap (composite_sequence_id);

delete from mismatchinformation mi
 where exists (
    select null
      from ARRAYDESIGNREPORTERGRP adrg,
	       reporter r,
		   sequenceposition sp
     where adrg.ARRAY_DESIGN_ID = 1015897521113355
	   and adrg.REPORTER_GROUP_ID = r.REPORTER_GROUP_ID
	   and mi.REPORTER_POSITION_ID = sp.ID
	   and sp.REPORTER_ID = r.ID )
delete from MISMATCHINFORMATION mmi -- 154775
 where exists (
    select null
      from ARRAYDESIGNREPORTERGRP adrg,
	       reporter r,
		   designelementmap dem,
		   featureinformation fi
     where adrg.ARRAY_DESIGN_ID = 1015897521113355
	   and adrg.REPORTER_GROUP_ID = r.REPORTER_GROUP_ID
	   and dem.reporter_id = r.ID
	   and fi.FEATURE_REPORTER_MAP_ID = dem.ID
	   and mmi.FEATURE_INFORMATION_ID = fi.ID)
delete from sequenceposition sp -- 154775 rows deleted
 where exists (
    select null
      from ARRAYDESIGNREPORTERGRP adrg,
	       reporter r
     where adrg.ARRAY_DESIGN_ID = 1015897521113355
	   and adrg.REPORTER_GROUP_ID = r.REPORTER_GROUP_ID
	   and sp.REPORTER_ID = r.ID )
delete from featureinformation fi -- 309553 rows deleted
 where exists (
    select null
      from ARRAYDESIGNREPORTERGRP adrg,
	       reporter r,
		   designelementmap dem
     where adrg.ARRAY_DESIGN_ID = 1015897521113355
	   and adrg.REPORTER_GROUP_ID = r.REPORTER_GROUP_ID
	   and dem.reporter_id = r.ID
	   and fi.FEATURE_REPORTER_MAP_ID = dem.ID)
delete from DESIGNELEMENTMAP dem -- 154775 rows deleted
 where exists (
    select null
      from ARRAYDESIGNREPORTERGRP adrg,
	       reporter r
     where adrg.ARRAY_DESIGN_ID = 1015897521113355
	   and adrg.REPORTER_GROUP_ID = r.REPORTER_GROUP_ID
 	   and dem.reporter_id = r.ID )

delete from reporter r -- 154775 rows deleted
 where exists (
    select null
      from ARRAYDESIGNREPORTERGRP adrg
     where adrg.ARRAY_DESIGN_ID = 1015897521113355
	   and adrg.REPORTER_GROUP_ID = r.REPORTER_GROUP_ID)

delete from sequenceposition sp
 where exists (
    select null
      from ARRAYDESIGNCOMPOSITEGRP adrg,
	       compositesequence cs
     where adrg.ARRAY_DESIGN_ID = 1015897521113355
	   and adrg.COMPOSITE_GROUP_ID = cs.COMPOSITE_GROUP_ID
 	   and sp.composite_id = cs.ID )
delete from sequenceposition sp --94727 deleted
 where exists (
    select null
      from ARRAYDESIGNCOMPOSITEGRP adrg,
	       compositesequence cs,
	       DESIGNELEMENTMAP dem
     where adrg.ARRAY_DESIGN_ID = 1015897521113355
	   and adrg.COMPOSITE_GROUP_ID = cs.COMPOSITE_GROUP_ID
 	   and dem.composite_sequence_id = cs.ID
 	   and sp.REPORTER_COMPOSITE_MAP_ID = dem.id )

delete from DESIGNELEMENTMAP dem -- 22645
 where exists (
    select null
      from ARRAYDESIGNCOMPOSITEGRP adrg,
	       compositesequence cs
     where adrg.ARRAY_DESIGN_ID = 1015897521113355
	   and adrg.COMPOSITE_GROUP_ID = cs.COMPOSITE_GROUP_ID
 	   and dem.composite_sequence_id = cs.ID )

delete from COMPSEQDIMENSIONCOMPSEQ csdcs --22645 rows deleted
 where exists (
    select null
      from ARRAYDESIGNCOMPOSITEGRP adcg,
           compositesequence cs
     where adcg.array_design_id = 1015897521113355
       and adcg.COMPOSITE_GROUP_ID = cs.COMPOSITE_GROUP_ID
       and csdcs.COMP_SEQ_ID = cs.id);

delete from compositesequence cs --22645 rows deleted
 where exists (
    select null
      from ARRAYDESIGNCOMPOSITEGRP adcg
     where adcg.array_design_id = 1015897521113355
       and adcg.COMPOSITE_GROUP_ID = cs.COMPOSITE_GROUP_ID );
delete from FEATUREDIMENSIONFEATURE fdf
 where exists ( 
   select null
     from ARRAYDESIGNFEATUREGRP adfg,
          feature f
    where adfg.array_design_id = 1015897521113355
      and adfg.FEATURE_GROUP_ID = f.FEATURE_GROUP_ID
      and fdf.feature_id = f.id )
delete from FEATURECONTROLLEDFEATURE fcf
 where exists ( 
   select null
     from ARRAYDESIGNFEATUREGRP adfg,
          feature f
    where adfg.array_design_id = 1015897521113355
      and adfg.FEATURE_GROUP_ID = f.FEATURE_GROUP_ID
      and (fcf.feature_id = f.id or fcf.CONTROLLED_FEATURE_ID = f.id))
delete from FEATURECONTROLFEATURE fcf
 where exists ( 
   select null
     from ARRAYDESIGNFEATUREGRP adfg,
          feature f
    where adfg.array_design_id = 1015897521113355
      and adfg.FEATURE_GROUP_ID = f.FEATURE_GROUP_ID
      and (fcf.feature_id = f.id or fcf.CONTROL_FEATURE_ID = f.id))
delete from featurelocation fl
 where exists ( 
   select null
     from ARRAYDESIGNFEATUREGRP adfg,
          feature f
    where adfg.array_design_id = 1015897521113355
      and adfg.FEATURE_GROUP_ID = f.FEATURE_GROUP_ID
      and fl.id = f.id )
delete from feature f
 where exists ( 
   select null
     from ARRAYDESIGNFEATUREGRP adfg
    where adfg.array_design_id = 1015897521113355
      and adfg.FEATURE_GROUP_ID = f.FEATURE_GROUP_ID )

delete from zonegroup zg
 where zg.PHYSICAL_ARRAY_DESIGN_ID = 1015897521113355;
 
delete from arraydesignreportergrp
 where array_design_id = 1015897521113355;
delete from arraydesigncompositegrp
 where array_design_id = 1015897521113355;
delete from arraydesignfeaturegrp
 where array_design_id = 1015897521113355;

update array
   set ARRAY_DESIGN_ID = null
 where ARRAY_DESIGN_ID = 1015897521113355;
delete from arraydesign
 where id =1015897521113355;

/*
Purpose:
This procedure purges array design information from caArray 1.3/1.4 oracle
database.

How does it work? Specifically, it will delete objects under the following 
MAGE-OM packages

ArrayDesign
DesignElement
BioSequence

and then update the references under Array to ArrayDesign (set to NULL). Furthermore,
the proc. will/should not delete any "good data" - i.e., it assumes that any associated
experiments, arrays, bioassays are good. Upon reload of the array design, the 
references to array design can then be reset to the new ID.

To avoid excessive undo generation (rollack segment), it commits after each
delete. On the other hand, the proc can easily be modified to run in a 
single transcation when we have a sufficiently large rollback segment.`

Note that we do not disable or drop any constraints. This way, we can ensure
data integrity and consistency. Secondly, this procedure may not be dealing with
ALL the tables involved in the MAGE-OM packages. Hence, there is a possibility that
it may fail to cover certain cases and therefore we may need more iterations to 
get it to work perfectly.

The following indexes are recommended for better query (delete) performance:
(unindexed foreign keys can cause various problems during DML update/delete operations, 
and even for simple query)

create index feature_fgrp_idx on feature(feature_group_id);
create index feature_zone_idx on feature(zone_id);
create index reporter_rgrp_idx on reporter(reporter_group_id);
create index dem_report_id_idx on designelementmap (reporter_id);
create index dem_com_seq_id_idx on designelementmap (composite_sequence_id);
create index f_ctrlled_f_cfid_idx on featurecontrolledfeature (controlled_feature_id)
create index f_ctrl_f_cfid_idx on featurecontrolfeature (control_feature_id)

The following table depicts the parent/child relationships among the entities.
The proc. will delete child tables and then move up the ladder to delete rows
from parent tables. (as an exercise to the reader, certain paths can be deleted
in parallel - how can this be implemented in plain pl/sql?)

ARRAYDESIGN
**ZONEGROUP                                                                                                                                                                                             
****ZONE                                                                                                                                                                                                
******FEATURE                                                                                                                                                                                           
********FEATURECONTROLFEATURE                                                                                                                                                                           
********FEATURECONTROLLEDFEATURE                                                                                                                                                                        
********FEATUREDIMENSIONFEATURE
********FEATURELOCATION
********FEATUREINFORMATION                                                                                                                                                                              
**********MISMATCHINFORMATION
**********MISMATCHINFORMATION
****ARRAYDESIGNCOMPOSITEGRP                                                                                                                                                                           
****ARRAYDESIGNFEATUREGRP                                                                                                                                                                             
****ARRAYDESIGNREPORTERGRP                                                                                                                                                                            
******REPORTER
********IMMOBILIZEDCHARACTERISTICS
********DESIGNELEMENTMAP
**********FEATUREINFORMATION                                                                                                                                                                            
************MISMATCHINFORMATION                                                                                                                                                                         
****COMPOSITESEQUENCE                                                                                                                                                                                   
******BIOLOGICALCHARACTERISTICS    
******COMPSEQDIMENSIONCOMPSEQ                                                                                                                                                                     
******DESIGNELEMENTMAP                                                                                                                                                                                  
********FEATUREINFORMATION                                                                                                                                                                              
**********MISMATCHINFORMATION 

*/
create or replace procedure purge_Array_Design(
  p_id in number)
is
begin
	delete from mismatchinformation mi
	 where mi.reporter_position_id in (
	    select sp.ID
	      from ARRAYDESIGNREPORTERGRP adrg,
		       reporter r,
			   sequenceposition sp
	     where adrg.ARRAY_DESIGN_ID = p_id
		   and adrg.REPORTER_GROUP_ID = r.REPORTER_GROUP_ID
		   and sp.REPORTER_ID = r.ID );
	commit;
	delete from MISMATCHINFORMATION mmi -- 154775
	 where mmi.FEATURE_INFORMATION_ID in (
	    select fi.ID
	      from ARRAYDESIGNREPORTERGRP adrg,
		       reporter r,
			   designelementmap dem,
			   featureinformation fi
	     where adrg.ARRAY_DESIGN_ID = p_id
		   and adrg.REPORTER_GROUP_ID = r.REPORTER_GROUP_ID
		   and dem.reporter_id = r.ID
		   and fi.FEATURE_REPORTER_MAP_ID = dem.ID );
	commit;
	delete from sequenceposition sp -- 154775 rows deleted
	 where sp.REPORTER_ID in (
	    select r.ID
	      from ARRAYDESIGNREPORTERGRP adrg,
		       reporter r
	     where adrg.ARRAY_DESIGN_ID = p_id
		   and adrg.REPORTER_GROUP_ID = r.REPORTER_GROUP_ID );
	commit;
	delete from featureinformation fi -- 309553 rows deleted
	 where fi.FEATURE_REPORTER_MAP_ID in (
	    select dem.ID
	      from ARRAYDESIGNREPORTERGRP adrg,
		       reporter r,
			   designelementmap dem
	     where adrg.ARRAY_DESIGN_ID = p_id
		   and adrg.REPORTER_GROUP_ID = r.REPORTER_GROUP_ID
		   and dem.reporter_id = r.ID );
	commit;
	delete from DESIGNELEMENTMAP dem -- 154775 rows deleted
	 where dem.reporter_id in (
	    select r.ID
	      from ARRAYDESIGNREPORTERGRP adrg,
		       reporter r
	     where adrg.ARRAY_DESIGN_ID = p_id
		   and adrg.REPORTER_GROUP_ID = r.REPORTER_GROUP_ID );
	commit;
	delete from IMMOBILIZEDCHARACTERISTICS ic
	 where ic.reporter_id in (
	    select r.ID
	      from ARRAYDESIGNREPORTERGRP adrg,
		       reporter r
	     where adrg.ARRAY_DESIGN_ID = p_id
		   and adrg.REPORTER_GROUP_ID = r.REPORTER_GROUP_ID );
	commit;
	delete from reporter r -- 154775 rows deleted
	 where r.REPORTER_GROUP_ID in (
	    select adrg.REPORTER_GROUP_ID
	      from ARRAYDESIGNREPORTERGRP adrg
	     where adrg.ARRAY_DESIGN_ID = p_id );
	commit;
	delete from sequenceposition sp
	 where sp.composite_id in (
	    select cs.ID
	      from ARRAYDESIGNCOMPOSITEGRP adrg,
		       compositesequence cs
	     where adrg.ARRAY_DESIGN_ID = p_id
		   and adrg.COMPOSITE_GROUP_ID = cs.COMPOSITE_GROUP_ID );
	commit;
	delete from sequenceposition sp --94727 deleted
	 where sp.REPORTER_COMPOSITE_MAP_ID in (
	    select dem.id
	      from ARRAYDESIGNCOMPOSITEGRP adrg,
		       compositesequence cs,
		       DESIGNELEMENTMAP dem
	     where adrg.ARRAY_DESIGN_ID = p_id
		   and adrg.COMPOSITE_GROUP_ID = cs.COMPOSITE_GROUP_ID
	 	   and dem.composite_sequence_id = cs.ID );
	commit;
	delete from DESIGNELEMENTMAP dem -- 22645
	 where dem.composite_sequence_id in (
	    select cs.ID
	      from ARRAYDESIGNCOMPOSITEGRP adrg,
		       compositesequence cs
	     where adrg.ARRAY_DESIGN_ID = p_id
		   and adrg.COMPOSITE_GROUP_ID = cs.COMPOSITE_GROUP_ID );
	commit;
	delete from COMPSEQDIMENSIONCOMPSEQ csdcs --22645 rows deleted
	 where csdcs.COMP_SEQ_ID in (
	    select cs.id
	      from ARRAYDESIGNCOMPOSITEGRP adcg,
	           compositesequence cs
	     where adcg.array_design_id = p_id
	       and adcg.COMPOSITE_GROUP_ID = cs.COMPOSITE_GROUP_ID);
	commit;
	delete from BIOLOGICALCHARACTERISTICS bc--22645 rows deleted
	 where bc.COMPOSITE_SEQUENCE_ID in (
	    select cs.id
	      from ARRAYDESIGNCOMPOSITEGRP adcg,
	           compositesequence cs
	     where adcg.array_design_id = p_id
	       and adcg.COMPOSITE_GROUP_ID = cs.COMPOSITE_GROUP_ID);
	commit;
	delete from compositesequence cs --22645 rows deleted
	 where cs.COMPOSITE_GROUP_ID in (
	    select adcg.COMPOSITE_GROUP_ID
	      from ARRAYDESIGNCOMPOSITEGRP adcg
	     where adcg.array_design_id = p_id );
	commit;
	delete from FEATUREDIMENSIONFEATURE fdf
	 where fdf.feature_id in ( 
	   select f.id
	     from ARRAYDESIGNFEATUREGRP adfg,
	          feature f
	    where adfg.array_design_id = p_id
	      and adfg.FEATURE_GROUP_ID = f.FEATURE_GROUP_ID );
	commit;
	delete from FEATURECONTROLLEDFEATURE fcf
	 where fcf.feature_id in ( 
	   select f.id 
	     from ARRAYDESIGNFEATUREGRP adfg,
	          feature f
	    where adfg.array_design_id = p_id
	      and adfg.FEATURE_GROUP_ID = f.FEATURE_GROUP_ID );
	commit;
	delete from FEATURECONTROLLEDFEATURE fcf
	 where fcf.CONTROLLED_FEATURE_ID in ( 
	   select f.id 
	     from ARRAYDESIGNFEATUREGRP adfg,
	          feature f
	    where adfg.array_design_id = p_id
	      and adfg.FEATURE_GROUP_ID = f.FEATURE_GROUP_ID);
	commit;
	delete from FEATURECONTROLFEATURE fcf
	 where fcf.feature_id in ( 
	   select f.id
	     from ARRAYDESIGNFEATUREGRP adfg,
	          feature f
	    where adfg.array_design_id = p_id
	      and adfg.FEATURE_GROUP_ID = f.FEATURE_GROUP_ID);
	commit;
	delete from FEATURECONTROLFEATURE fcf
	 where fcf.CONTROL_FEATURE_ID in ( 
	   select f.id
	     from ARRAYDESIGNFEATUREGRP adfg,
	          feature f
	    where adfg.array_design_id = p_id
	      and adfg.FEATURE_GROUP_ID = f.FEATURE_GROUP_ID);
	commit;
	delete from featurelocation fl
	 where fl.id in ( 
	   select f.id
	     from ARRAYDESIGNFEATUREGRP adfg,
	          feature f
	    where adfg.array_design_id = p_id
	      and adfg.FEATURE_GROUP_ID = f.FEATURE_GROUP_ID );
	commit;
	delete from MISMATCHINFORMATION mmi -- 154775
	 where mmi.FEATURE_INFORMATION_ID in (
	   select fi.ID
	     from ARRAYDESIGNFEATUREGRP adfg,
	          feature f,
	          featureinformation fi
	    where adfg.array_design_id = p_id
	      and adfg.FEATURE_GROUP_ID = f.FEATURE_GROUP_ID
	      and fi.FEATURE_ID = f.id);
	commit;
	delete from featureinformation fi
	 where fi.FEATURE_ID in (
	   select f.id
	     from ARRAYDESIGNFEATUREGRP adfg,
	          feature f
	    where adfg.array_design_id = p_id
	      and adfg.FEATURE_GROUP_ID = f.FEATURE_GROUP_ID );
	commit;
	delete from feature f
	 where f.FEATURE_GROUP_ID in ( 
	   select adfg.FEATURE_GROUP_ID
	     from ARRAYDESIGNFEATUREGRP adfg
	    where adfg.array_design_id = p_id );
	commit;
    delete from zone z
     where z.zone_group_id in (
        select id 
          from zonegroup zg
         where zg.PHYSICAL_ARRAY_DESIGN_ID = p_id );
	delete from zonegroup zg
	 where zg.PHYSICAL_ARRAY_DESIGN_ID = p_id;
	delete from arraydesignreportergrp
	 where array_design_id = p_id;
	delete from arraydesigncompositegrp
	 where array_design_id = p_id;
	delete from arraydesignfeaturegrp
	 where array_design_id = p_id;
	update array
	   set ARRAY_DESIGN_ID = null
	 where ARRAY_DESIGN_ID = p_id;
	update CA_ARRAYDSGNFILEUPLOADENTRY
	   set ARRAY_DESIGN_ID = null
	 where ARRAY_DESIGN_ID = p_id;
	delete from arraydesignprovider
	 where ARRAY_DESIGN_ID = p_id;
	delete from arraydesign
	 where id =p_id;
	commit;
end purge_Array_Design;
/
sho errors


select cs.IDENTIFIER
 	     from ARRAYDESIGNCOMPOSITEGRP adcg,
		 	  COMPOSITESEQUENCE cs
	    where adcg.array_design_id = 1015897523042021
		  and adcg.COMPOSITE_GROUP_ID = cs.COMPOSITE_GROUP_ID
order by 1

select count(cs.IDENTIFIER)
  from COMPOSITESEQUENCE cs 
  join ARRAYDESIGNCOMPOSITEGRP adcg 
    on adcg.COMPOSITE_GROUP_ID = cs.COMPOSITE_GROUP_ID
 where adcg.array_design_id = 1015897523042021

select id from compositesequence where identifier = 'Affymetrix.com:CompositeSequence:hg-u133_plus_2.UnusedProbes';
delete from compositesequence where id = '1015897527804781';
commit;



select * from feature where id = 1015897523935375


insert into as_user_role_protect_app
select (rownum+6)*-1, UPDATE_DATE, ROLE_ID, APPLICATION_ID, PROTECTION_GROUP_ID, -2, PROTECTION_ELEMENT_ID, PROTECTION_TYPE_ID, START_DATE, END_DATE
  from AS_USER_ROLE_PROTECT_APP 
 where user_id = -1

 commit;
 

/**
 * we will add a unique constraint to as_user.login_name.
 */
select login_name, count(*) 
  from as_user 
 group by login_name 
having count(*) > 1
/
delete from AS_USER_ROLE_PROTECT_APP where user_id = 69;
delete from as_user where user_id = 69;
delete from AS_USER_ROLE_PROTECT_APP where user_id = 70;
delete from as_user where user_id = 70;
commit;

alter table as_user modify login_name not null
/
alter table as_user 
  add constraint unq_as_user_login_name
  unique (login_name)
/
create table ca_file_status (
  status               varchar2(50) primary key,
  description          varchar2(255) not null
)
/

insert into ca_file_status values( 'SUBMITTED', 'new submission')
/
insert into ca_file_status values( 'SUBMISSION ERROR', 'Error occured on submission of the file, see error code')
/
insert into ca_file_status values( 'IN PROCESS', 'In process...')
/
insert into ca_file_status values( 'PROCESSING ERROR', 'Error occured while processing the file, see error code')
/
insert into ca_file_status values( 'PROCESSING SUCCESSFUL', 'Processing Successful')
/
insert into ca_file_status values( 'DELETED', 'File is marked for deletion')
/
insert into ca_file_status values( 'DELETION ERROR', 'Error occured on deletion operation')
/
insert into ca_file_status values( 'VIRUS SCAN SUCCESSFUL', 'Virus scan successful')
/
insert into ca_file_status values( 'VIRUS SCAN ERROR ', 'Error occured on virus scan, see error code')
/

alter table ca_hybridfileuploadentry add (
  originial_filename   varchar2(255),
  user_id              varchar2(30),
  status               varchar2(50) references ca_file_status,
  status_date          date default sysdate not null,
  validator_code       varchar2(255) default -1 not null
)
/

-- NOTE: we will drop the columns valid & validationdate after we properly migrate the data to 
-- the new columns
-- NOTE: The new columns are mandatory
-- The existing data must be migrated prior to turning them to NOT NULL

alter table ca_hybridfileuploadentry modify experiment_id null
/

alter table ca_hybridfileuploadentry
  add constraint ca_hfue_user_id_fk
  foreign key (user_id)
  references as_user (login_name)
/

create table ca_file_upload_history (
  id                   number primary key,
  file_upload_entry_id number not null references ca_hybridfileuploadentry,
  status               varchar2(50) not null references ca_file_status,
  status_date          date not null,
  description          varchar2(255)
)
/

alter table CA_ARRAYDSGNFILEUPLOADENTRY add (
  originial_filename   varchar2(255),
  user_id              varchar2(30),
  status               varchar2(50) references ca_file_status,
  status_date          date default sysdate not null,
  validator_code       varchar2(255) default -1 not null
)
/
-- NOTE: we will drop the columns valid & validationdate after we properly migrate the data to 
-- the new columns
-- NOTE: The new columns are mandatory
-- The existing data must be migrated prior to turning them to NOT NULL

alter table CA_ARRAYDSGNFILEUPLOADENTRY
  add constraint ca_adfue_user_id_fk
  foreign key (user_id)
  references as_user (login_name)
/



alter table CA_FILEPARSINGENTRY modify PARSINGSUCCEEDED null
/
alter table CA_FILEPARSINGENTRY drop constraint CA_FILEPARSINGENTRY_CK1
/
alter table CA_FILEPARSINGENTRY modify (PARSINGSUCCEEDED varchar2(50))
/
update CA_FILEPARSINGENTRY
   set PARSINGSUCCEEDED = 
       decode(parsingsucceeded, 0, 'IN PROCESS',
	                            1, 'PROCESSING SUCCESSFUL',
	                            2, 'PROCESSING ERROR')
/
commit
/
alter table CA_FILEPARSINGENTRY
  add constraint ca_fileparsingentry_ps_fk
  foreign key (PARSINGSUCCEEDED)
  references ca_file_status
/
alter table CA_FILEPARSINGENTRY
  add constraint CA_FILEPARSINGENTRY_CK1
  check (PARSINGSUCCEEDED in ('IN PROCESS', 'PROCESSING SUCCESSFUL', 'PROCESSING ERROR'))
/


alter table CA_FILEUPLOADGROUP modify PARSINGSUCCEEDED null
/
alter table CA_FILEUPLOADGROUP drop constraint CA_FILEUPLOADGROUP_CK1
/
alter table CA_FILEUPLOADGROUP modify (PARSINGSUCCEEDED varchar2(50))
/
update CA_FILEUPLOADGROUP
   set PARSINGSUCCEEDED = 
       decode(parsingsucceeded, 0, 'IN PROCESS',
	                            1, 'PROCESSING SUCCESSFUL',
	                            2, 'PROCESSING ERROR')
/
commit
/
alter table CA_FILEUPLOADGROUP
  add constraint ca_CA_FILEUPLOADGROUP_ps_fk
  foreign key (PARSINGSUCCEEDED)
  references ca_file_status
/
alter table CA_FILEUPLOADGROUP
  add constraint CA_FILEUPLOADGROUP_CK1
  check (PARSINGSUCCEEDED in ('IN PROCESS', 'PROCESSING SUCCESSFUL', 'PROCESSING ERROR'))
/


/*
alter table ca_hybridfileuploadentry modify (
  orginial_filename not null,
  user_id           not null,
  status            not null
)
/
*/


